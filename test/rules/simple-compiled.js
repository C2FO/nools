(function(){ function _getCompiled(nools){ return (function() { return function(options) { options = options || {}; var bind = function(scope, fn) { return function() { return fn.apply(scope, arguments); }; }, defined = options.defined || {}, scope = options.scope || {}; return nools.flow("simple-compiled", function() { var Message = defined.Message = this.addDefined("Message", function() { var Defined = function(message) { this.message = message; }, proto = Defined.prototype; return proto.message = "", proto.constructor = function(message) { this.message = message; }, Defined; }()); this.rule("Hello", { scope: scope }, [ [ Message, "m", "m.message =~ /^hello(\\s*world)?$/" ] ], function(facts, flow) { var m = facts.m, m = facts.m, modify = bind(flow, flow.modify); modify(m, function() { this.message += " goodbye"; }); }), this.rule("Goodbye", { scope: scope }, [ [ Message, "m", "m.message =~ /.*goodbye$/" ] ], function(facts, flow) { var m = facts.m, m = facts.m, emit = bind(flow, flow.emit); emit("found-goodbye", m); }); }); }; })(); } if ("undefined" !== typeof exports) { if ("undefined" !== typeof module && module.exports) { module.exports = _getCompiled(require("../../")); } } else if ("function" === typeof define && define.amd) { define(["../../"], function (nools) { return _getCompiled(nools); }); } else { _getCompiled(this.nools)(); } }).call(this);
